ARM GAS  /tmp/cc46IN26.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"usart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/usart.c"
  20              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  21              		.align	1
  22              		.global	MX_USART1_UART_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	MX_USART1_UART_Init:
  28              	.LFB134:
   1:Core/Src/usart.c **** /* USER CODE BEGIN Header */
   2:Core/Src/usart.c **** /**
   3:Core/Src/usart.c ****   ******************************************************************************
   4:Core/Src/usart.c ****   * @file    usart.c
   5:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/usart.c ****   *          of the USART instances.
   7:Core/Src/usart.c ****   ******************************************************************************
   8:Core/Src/usart.c ****   * @attention
   9:Core/Src/usart.c ****   *
  10:Core/Src/usart.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/usart.c ****   * All rights reserved.
  12:Core/Src/usart.c ****   *
  13:Core/Src/usart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/usart.c ****   * in the root directory of this software component.
  15:Core/Src/usart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** /* USER CODE END Header */
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart1;
  28:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart1_tx;
  29:Core/Src/usart.c **** 
  30:Core/Src/usart.c **** /* USART1 init function */
ARM GAS  /tmp/cc46IN26.s 			page 2


  31:Core/Src/usart.c **** 
  32:Core/Src/usart.c **** void MX_USART1_UART_Init(void)
  33:Core/Src/usart.c **** {
  29              		.loc 1 33 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  34:Core/Src/usart.c **** 
  35:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 0 */
  36:Core/Src/usart.c **** 
  37:Core/Src/usart.c ****   /* USER CODE END USART1_Init 0 */
  38:Core/Src/usart.c **** 
  39:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 1 */
  40:Core/Src/usart.c **** 
  41:Core/Src/usart.c ****   /* USER CODE END USART1_Init 1 */
  42:Core/Src/usart.c ****   huart1.Instance = USART1;
  38              		.loc 1 42 3 view .LVU1
  39              		.loc 1 42 19 is_stmt 0 view .LVU2
  40 0002 0A48     		ldr	r0, .L5
  41 0004 0A4B     		ldr	r3, .L5+4
  42 0006 0360     		str	r3, [r0]
  43:Core/Src/usart.c ****   huart1.Init.BaudRate = 19200;
  43              		.loc 1 43 3 is_stmt 1 view .LVU3
  44              		.loc 1 43 24 is_stmt 0 view .LVU4
  45 0008 4FF49643 		mov	r3, #19200
  46 000c 4360     		str	r3, [r0, #4]
  44:Core/Src/usart.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  47              		.loc 1 44 3 is_stmt 1 view .LVU5
  48              		.loc 1 44 26 is_stmt 0 view .LVU6
  49 000e 0023     		movs	r3, #0
  50 0010 8360     		str	r3, [r0, #8]
  45:Core/Src/usart.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
  51              		.loc 1 45 3 is_stmt 1 view .LVU7
  52              		.loc 1 45 24 is_stmt 0 view .LVU8
  53 0012 C360     		str	r3, [r0, #12]
  46:Core/Src/usart.c ****   huart1.Init.Parity = UART_PARITY_NONE;
  54              		.loc 1 46 3 is_stmt 1 view .LVU9
  55              		.loc 1 46 22 is_stmt 0 view .LVU10
  56 0014 0361     		str	r3, [r0, #16]
  47:Core/Src/usart.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
  57              		.loc 1 47 3 is_stmt 1 view .LVU11
  58              		.loc 1 47 20 is_stmt 0 view .LVU12
  59 0016 0C22     		movs	r2, #12
  60 0018 4261     		str	r2, [r0, #20]
  48:Core/Src/usart.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  61              		.loc 1 48 3 is_stmt 1 view .LVU13
  62              		.loc 1 48 25 is_stmt 0 view .LVU14
  63 001a 8361     		str	r3, [r0, #24]
  49:Core/Src/usart.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  64              		.loc 1 49 3 is_stmt 1 view .LVU15
  65              		.loc 1 49 28 is_stmt 0 view .LVU16
  66 001c C361     		str	r3, [r0, #28]
ARM GAS  /tmp/cc46IN26.s 			page 3


  50:Core/Src/usart.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  67              		.loc 1 50 3 is_stmt 1 view .LVU17
  68              		.loc 1 50 7 is_stmt 0 view .LVU18
  69 001e FFF7FEFF 		bl	HAL_UART_Init
  70              	.LVL0:
  71              		.loc 1 50 6 discriminator 1 view .LVU19
  72 0022 00B9     		cbnz	r0, .L4
  73              	.L1:
  51:Core/Src/usart.c ****   {
  52:Core/Src/usart.c ****     Error_Handler();
  53:Core/Src/usart.c ****   }
  54:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 2 */
  55:Core/Src/usart.c **** 
  56:Core/Src/usart.c ****   /* USER CODE END USART1_Init 2 */
  57:Core/Src/usart.c **** 
  58:Core/Src/usart.c **** }
  74              		.loc 1 58 1 view .LVU20
  75 0024 08BD     		pop	{r3, pc}
  76              	.L4:
  52:Core/Src/usart.c ****   }
  77              		.loc 1 52 5 is_stmt 1 view .LVU21
  78 0026 FFF7FEFF 		bl	Error_Handler
  79              	.LVL1:
  80              		.loc 1 58 1 is_stmt 0 view .LVU22
  81 002a FBE7     		b	.L1
  82              	.L6:
  83              		.align	2
  84              	.L5:
  85 002c 00000000 		.word	huart1
  86 0030 00100140 		.word	1073811456
  87              		.cfi_endproc
  88              	.LFE134:
  90              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  91              		.align	1
  92              		.global	HAL_UART_MspInit
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  97              	HAL_UART_MspInit:
  98              	.LVL2:
  99              	.LFB135:
  59:Core/Src/usart.c **** 
  60:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  61:Core/Src/usart.c **** {
 100              		.loc 1 61 1 is_stmt 1 view -0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 32
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		.loc 1 61 1 is_stmt 0 view .LVU24
 105 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 106              	.LCFI1:
 107              		.cfi_def_cfa_offset 28
 108              		.cfi_offset 4, -28
 109              		.cfi_offset 5, -24
 110              		.cfi_offset 6, -20
 111              		.cfi_offset 7, -16
 112              		.cfi_offset 8, -12
ARM GAS  /tmp/cc46IN26.s 			page 4


 113              		.cfi_offset 9, -8
 114              		.cfi_offset 14, -4
 115 0004 89B0     		sub	sp, sp, #36
 116              	.LCFI2:
 117              		.cfi_def_cfa_offset 64
  62:Core/Src/usart.c **** 
  63:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 118              		.loc 1 63 3 is_stmt 1 view .LVU25
 119              		.loc 1 63 20 is_stmt 0 view .LVU26
 120 0006 0023     		movs	r3, #0
 121 0008 0393     		str	r3, [sp, #12]
 122 000a 0493     		str	r3, [sp, #16]
 123 000c 0593     		str	r3, [sp, #20]
 124 000e 0693     		str	r3, [sp, #24]
 125 0010 0793     		str	r3, [sp, #28]
  64:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 126              		.loc 1 64 3 is_stmt 1 view .LVU27
 127              		.loc 1 64 16 is_stmt 0 view .LVU28
 128 0012 0268     		ldr	r2, [r0]
 129              		.loc 1 64 5 view .LVU29
 130 0014 03F18043 		add	r3, r3, #1073741824
 131 0018 03F58833 		add	r3, r3, #69632
 132 001c 9A42     		cmp	r2, r3
 133 001e 02D0     		beq	.L11
 134              	.LVL3:
 135              	.L7:
  65:Core/Src/usart.c ****   {
  66:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
  67:Core/Src/usart.c **** 
  68:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 0 */
  69:Core/Src/usart.c ****     /* USART1 clock enable */
  70:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_ENABLE();
  71:Core/Src/usart.c **** 
  72:Core/Src/usart.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  73:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  74:Core/Src/usart.c ****     /**USART1 GPIO Configuration
  75:Core/Src/usart.c ****     PB7     ------> USART1_RX
  76:Core/Src/usart.c ****     PA9     ------> USART1_TX
  77:Core/Src/usart.c ****     */
  78:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_7;
  79:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  80:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  81:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  82:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
  83:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
  84:Core/Src/usart.c **** 
  85:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
  86:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  87:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  88:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  89:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
  90:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  91:Core/Src/usart.c **** 
  92:Core/Src/usart.c ****     /* USART1 DMA Init */
  93:Core/Src/usart.c ****     /* USART1_TX Init */
  94:Core/Src/usart.c ****     hdma_usart1_tx.Instance = DMA2_Stream7;
  95:Core/Src/usart.c ****     hdma_usart1_tx.Init.Channel = DMA_CHANNEL_4;
ARM GAS  /tmp/cc46IN26.s 			page 5


  96:Core/Src/usart.c ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
  97:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
  98:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
  99:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 100:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 101:Core/Src/usart.c ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 102:Core/Src/usart.c ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 103:Core/Src/usart.c ****     hdma_usart1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 104:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 105:Core/Src/usart.c ****     {
 106:Core/Src/usart.c ****       Error_Handler();
 107:Core/Src/usart.c ****     }
 108:Core/Src/usart.c **** 
 109:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart1_tx);
 110:Core/Src/usart.c **** 
 111:Core/Src/usart.c ****     /* USART1 interrupt Init */
 112:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 113:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 114:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 115:Core/Src/usart.c **** 
 116:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 1 */
 117:Core/Src/usart.c ****   }
 118:Core/Src/usart.c **** }
 136              		.loc 1 118 1 view .LVU30
 137 0020 09B0     		add	sp, sp, #36
 138              	.LCFI3:
 139              		.cfi_remember_state
 140              		.cfi_def_cfa_offset 28
 141              		@ sp needed
 142 0022 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 143              	.LVL4:
 144              	.L11:
 145              	.LCFI4:
 146              		.cfi_restore_state
 147              		.loc 1 118 1 view .LVU31
 148 0026 0446     		mov	r4, r0
  70:Core/Src/usart.c **** 
 149              		.loc 1 70 5 is_stmt 1 view .LVU32
 150              	.LBB2:
  70:Core/Src/usart.c **** 
 151              		.loc 1 70 5 view .LVU33
 152 0028 0025     		movs	r5, #0
 153 002a 0095     		str	r5, [sp]
  70:Core/Src/usart.c **** 
 154              		.loc 1 70 5 view .LVU34
 155 002c 03F59433 		add	r3, r3, #75776
 156 0030 5A6C     		ldr	r2, [r3, #68]
 157 0032 42F01002 		orr	r2, r2, #16
 158 0036 5A64     		str	r2, [r3, #68]
  70:Core/Src/usart.c **** 
 159              		.loc 1 70 5 view .LVU35
 160 0038 5A6C     		ldr	r2, [r3, #68]
 161 003a 02F01002 		and	r2, r2, #16
 162 003e 0092     		str	r2, [sp]
  70:Core/Src/usart.c **** 
 163              		.loc 1 70 5 view .LVU36
 164 0040 009A     		ldr	r2, [sp]
ARM GAS  /tmp/cc46IN26.s 			page 6


 165              	.LBE2:
  70:Core/Src/usart.c **** 
 166              		.loc 1 70 5 view .LVU37
  72:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 167              		.loc 1 72 5 view .LVU38
 168              	.LBB3:
  72:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 169              		.loc 1 72 5 view .LVU39
 170 0042 0195     		str	r5, [sp, #4]
  72:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 171              		.loc 1 72 5 view .LVU40
 172 0044 1A6B     		ldr	r2, [r3, #48]
 173 0046 42F00202 		orr	r2, r2, #2
 174 004a 1A63     		str	r2, [r3, #48]
  72:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 175              		.loc 1 72 5 view .LVU41
 176 004c 1A6B     		ldr	r2, [r3, #48]
 177 004e 02F00202 		and	r2, r2, #2
 178 0052 0192     		str	r2, [sp, #4]
  72:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 179              		.loc 1 72 5 view .LVU42
 180 0054 019A     		ldr	r2, [sp, #4]
 181              	.LBE3:
  72:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 182              		.loc 1 72 5 view .LVU43
  73:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 183              		.loc 1 73 5 view .LVU44
 184              	.LBB4:
  73:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 185              		.loc 1 73 5 view .LVU45
 186 0056 0295     		str	r5, [sp, #8]
  73:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 187              		.loc 1 73 5 view .LVU46
 188 0058 1A6B     		ldr	r2, [r3, #48]
 189 005a 42F00102 		orr	r2, r2, #1
 190 005e 1A63     		str	r2, [r3, #48]
  73:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 191              		.loc 1 73 5 view .LVU47
 192 0060 1B6B     		ldr	r3, [r3, #48]
 193 0062 03F00103 		and	r3, r3, #1
 194 0066 0293     		str	r3, [sp, #8]
  73:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 195              		.loc 1 73 5 view .LVU48
 196 0068 029B     		ldr	r3, [sp, #8]
 197              	.LBE4:
  73:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 198              		.loc 1 73 5 view .LVU49
  78:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 199              		.loc 1 78 5 view .LVU50
  78:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 200              		.loc 1 78 25 is_stmt 0 view .LVU51
 201 006a 8023     		movs	r3, #128
 202 006c 0393     		str	r3, [sp, #12]
  79:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 203              		.loc 1 79 5 is_stmt 1 view .LVU52
  79:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 204              		.loc 1 79 26 is_stmt 0 view .LVU53
ARM GAS  /tmp/cc46IN26.s 			page 7


 205 006e 4FF00209 		mov	r9, #2
 206 0072 CDF81090 		str	r9, [sp, #16]
  80:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 207              		.loc 1 80 5 is_stmt 1 view .LVU54
  81:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 208              		.loc 1 81 5 view .LVU55
  81:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 209              		.loc 1 81 27 is_stmt 0 view .LVU56
 210 0076 4FF00308 		mov	r8, #3
 211 007a CDF81880 		str	r8, [sp, #24]
  82:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 212              		.loc 1 82 5 is_stmt 1 view .LVU57
  82:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 213              		.loc 1 82 31 is_stmt 0 view .LVU58
 214 007e 0727     		movs	r7, #7
 215 0080 0797     		str	r7, [sp, #28]
  83:Core/Src/usart.c **** 
 216              		.loc 1 83 5 is_stmt 1 view .LVU59
 217 0082 03AE     		add	r6, sp, #12
 218 0084 3146     		mov	r1, r6
 219 0086 1948     		ldr	r0, .L13
 220              	.LVL5:
  83:Core/Src/usart.c **** 
 221              		.loc 1 83 5 is_stmt 0 view .LVU60
 222 0088 FFF7FEFF 		bl	HAL_GPIO_Init
 223              	.LVL6:
  85:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 224              		.loc 1 85 5 is_stmt 1 view .LVU61
  85:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 225              		.loc 1 85 25 is_stmt 0 view .LVU62
 226 008c 4FF40073 		mov	r3, #512
 227 0090 0393     		str	r3, [sp, #12]
  86:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 228              		.loc 1 86 5 is_stmt 1 view .LVU63
  86:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 229              		.loc 1 86 26 is_stmt 0 view .LVU64
 230 0092 CDF81090 		str	r9, [sp, #16]
  87:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 231              		.loc 1 87 5 is_stmt 1 view .LVU65
  87:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 232              		.loc 1 87 26 is_stmt 0 view .LVU66
 233 0096 0595     		str	r5, [sp, #20]
  88:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 234              		.loc 1 88 5 is_stmt 1 view .LVU67
  88:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 235              		.loc 1 88 27 is_stmt 0 view .LVU68
 236 0098 CDF81880 		str	r8, [sp, #24]
  89:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 237              		.loc 1 89 5 is_stmt 1 view .LVU69
  89:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 238              		.loc 1 89 31 is_stmt 0 view .LVU70
 239 009c 0797     		str	r7, [sp, #28]
  90:Core/Src/usart.c **** 
 240              		.loc 1 90 5 is_stmt 1 view .LVU71
 241 009e 3146     		mov	r1, r6
 242 00a0 1348     		ldr	r0, .L13+4
 243 00a2 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/cc46IN26.s 			page 8


 244              	.LVL7:
  94:Core/Src/usart.c ****     hdma_usart1_tx.Init.Channel = DMA_CHANNEL_4;
 245              		.loc 1 94 5 view .LVU72
  94:Core/Src/usart.c ****     hdma_usart1_tx.Init.Channel = DMA_CHANNEL_4;
 246              		.loc 1 94 29 is_stmt 0 view .LVU73
 247 00a6 1348     		ldr	r0, .L13+8
 248 00a8 134B     		ldr	r3, .L13+12
 249 00aa 0360     		str	r3, [r0]
  95:Core/Src/usart.c ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 250              		.loc 1 95 5 is_stmt 1 view .LVU74
  95:Core/Src/usart.c ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 251              		.loc 1 95 33 is_stmt 0 view .LVU75
 252 00ac 4FF00063 		mov	r3, #134217728
 253 00b0 4360     		str	r3, [r0, #4]
  96:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 254              		.loc 1 96 5 is_stmt 1 view .LVU76
  96:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 255              		.loc 1 96 35 is_stmt 0 view .LVU77
 256 00b2 4023     		movs	r3, #64
 257 00b4 8360     		str	r3, [r0, #8]
  97:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 258              		.loc 1 97 5 is_stmt 1 view .LVU78
  97:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 259              		.loc 1 97 35 is_stmt 0 view .LVU79
 260 00b6 C560     		str	r5, [r0, #12]
  98:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 261              		.loc 1 98 5 is_stmt 1 view .LVU80
  98:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 262              		.loc 1 98 32 is_stmt 0 view .LVU81
 263 00b8 4FF48063 		mov	r3, #1024
 264 00bc 0361     		str	r3, [r0, #16]
  99:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 265              		.loc 1 99 5 is_stmt 1 view .LVU82
  99:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 266              		.loc 1 99 45 is_stmt 0 view .LVU83
 267 00be 4561     		str	r5, [r0, #20]
 100:Core/Src/usart.c ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 268              		.loc 1 100 5 is_stmt 1 view .LVU84
 100:Core/Src/usart.c ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 269              		.loc 1 100 42 is_stmt 0 view .LVU85
 270 00c0 8561     		str	r5, [r0, #24]
 101:Core/Src/usart.c ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 271              		.loc 1 101 5 is_stmt 1 view .LVU86
 101:Core/Src/usart.c ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 272              		.loc 1 101 30 is_stmt 0 view .LVU87
 273 00c2 C561     		str	r5, [r0, #28]
 102:Core/Src/usart.c ****     hdma_usart1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 274              		.loc 1 102 5 is_stmt 1 view .LVU88
 102:Core/Src/usart.c ****     hdma_usart1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 275              		.loc 1 102 34 is_stmt 0 view .LVU89
 276 00c4 0562     		str	r5, [r0, #32]
 103:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 277              		.loc 1 103 5 is_stmt 1 view .LVU90
 103:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 278              		.loc 1 103 34 is_stmt 0 view .LVU91
 279 00c6 4562     		str	r5, [r0, #36]
 104:Core/Src/usart.c ****     {
ARM GAS  /tmp/cc46IN26.s 			page 9


 280              		.loc 1 104 5 is_stmt 1 view .LVU92
 104:Core/Src/usart.c ****     {
 281              		.loc 1 104 9 is_stmt 0 view .LVU93
 282 00c8 FFF7FEFF 		bl	HAL_DMA_Init
 283              	.LVL8:
 104:Core/Src/usart.c ****     {
 284              		.loc 1 104 8 discriminator 1 view .LVU94
 285 00cc 58B9     		cbnz	r0, .L12
 286              	.L9:
 109:Core/Src/usart.c **** 
 287              		.loc 1 109 5 is_stmt 1 view .LVU95
 109:Core/Src/usart.c **** 
 288              		.loc 1 109 5 view .LVU96
 289 00ce 094B     		ldr	r3, .L13+8
 290 00d0 A363     		str	r3, [r4, #56]
 109:Core/Src/usart.c **** 
 291              		.loc 1 109 5 view .LVU97
 292 00d2 9C63     		str	r4, [r3, #56]
 109:Core/Src/usart.c **** 
 293              		.loc 1 109 5 view .LVU98
 112:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 294              		.loc 1 112 5 view .LVU99
 295 00d4 0022     		movs	r2, #0
 296 00d6 1146     		mov	r1, r2
 297 00d8 2520     		movs	r0, #37
 298 00da FFF7FEFF 		bl	HAL_NVIC_SetPriority
 299              	.LVL9:
 113:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 300              		.loc 1 113 5 view .LVU100
 301 00de 2520     		movs	r0, #37
 302 00e0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 303              	.LVL10:
 304              		.loc 1 118 1 is_stmt 0 view .LVU101
 305 00e4 9CE7     		b	.L7
 306              	.L12:
 106:Core/Src/usart.c ****     }
 307              		.loc 1 106 7 is_stmt 1 view .LVU102
 308 00e6 FFF7FEFF 		bl	Error_Handler
 309              	.LVL11:
 310 00ea F0E7     		b	.L9
 311              	.L14:
 312              		.align	2
 313              	.L13:
 314 00ec 00040240 		.word	1073873920
 315 00f0 00000240 		.word	1073872896
 316 00f4 00000000 		.word	hdma_usart1_tx
 317 00f8 B8640240 		.word	1073898680
 318              		.cfi_endproc
 319              	.LFE135:
 321              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 322              		.align	1
 323              		.global	HAL_UART_MspDeInit
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 328              	HAL_UART_MspDeInit:
 329              	.LVL12:
ARM GAS  /tmp/cc46IN26.s 			page 10


 330              	.LFB136:
 119:Core/Src/usart.c **** 
 120:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 121:Core/Src/usart.c **** {
 331              		.loc 1 121 1 view -0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 122:Core/Src/usart.c **** 
 123:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 335              		.loc 1 123 3 view .LVU104
 336              		.loc 1 123 16 is_stmt 0 view .LVU105
 337 0000 0268     		ldr	r2, [r0]
 338              		.loc 1 123 5 view .LVU106
 339 0002 0D4B     		ldr	r3, .L22
 340 0004 9A42     		cmp	r2, r3
 341 0006 00D0     		beq	.L21
 342 0008 7047     		bx	lr
 343              	.L21:
 121:Core/Src/usart.c **** 
 344              		.loc 1 121 1 view .LVU107
 345 000a 10B5     		push	{r4, lr}
 346              	.LCFI5:
 347              		.cfi_def_cfa_offset 8
 348              		.cfi_offset 4, -8
 349              		.cfi_offset 14, -4
 350 000c 0446     		mov	r4, r0
 124:Core/Src/usart.c ****   {
 125:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 126:Core/Src/usart.c **** 
 127:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 0 */
 128:Core/Src/usart.c ****     /* Peripheral clock disable */
 129:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 351              		.loc 1 129 5 is_stmt 1 view .LVU108
 352 000e 0B4A     		ldr	r2, .L22+4
 353 0010 536C     		ldr	r3, [r2, #68]
 354 0012 23F01003 		bic	r3, r3, #16
 355 0016 5364     		str	r3, [r2, #68]
 130:Core/Src/usart.c **** 
 131:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 132:Core/Src/usart.c ****     PB7     ------> USART1_RX
 133:Core/Src/usart.c ****     PA9     ------> USART1_TX
 134:Core/Src/usart.c ****     */
 135:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_7);
 356              		.loc 1 135 5 view .LVU109
 357 0018 8021     		movs	r1, #128
 358 001a 0948     		ldr	r0, .L22+8
 359              	.LVL13:
 360              		.loc 1 135 5 is_stmt 0 view .LVU110
 361 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 362              	.LVL14:
 136:Core/Src/usart.c **** 
 137:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9);
 363              		.loc 1 137 5 is_stmt 1 view .LVU111
 364 0020 4FF40071 		mov	r1, #512
 365 0024 0748     		ldr	r0, .L22+12
 366 0026 FFF7FEFF 		bl	HAL_GPIO_DeInit
ARM GAS  /tmp/cc46IN26.s 			page 11


 367              	.LVL15:
 138:Core/Src/usart.c **** 
 139:Core/Src/usart.c ****     /* USART1 DMA DeInit */
 140:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 368              		.loc 1 140 5 view .LVU112
 369 002a A06B     		ldr	r0, [r4, #56]
 370 002c FFF7FEFF 		bl	HAL_DMA_DeInit
 371              	.LVL16:
 141:Core/Src/usart.c **** 
 142:Core/Src/usart.c ****     /* USART1 interrupt Deinit */
 143:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
 372              		.loc 1 143 5 view .LVU113
 373 0030 2520     		movs	r0, #37
 374 0032 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 375              	.LVL17:
 144:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 145:Core/Src/usart.c **** 
 146:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 1 */
 147:Core/Src/usart.c ****   }
 148:Core/Src/usart.c **** }
 376              		.loc 1 148 1 is_stmt 0 view .LVU114
 377 0036 10BD     		pop	{r4, pc}
 378              	.LVL18:
 379              	.L23:
 380              		.loc 1 148 1 view .LVU115
 381              		.align	2
 382              	.L22:
 383 0038 00100140 		.word	1073811456
 384 003c 00380240 		.word	1073887232
 385 0040 00040240 		.word	1073873920
 386 0044 00000240 		.word	1073872896
 387              		.cfi_endproc
 388              	.LFE136:
 390              		.global	hdma_usart1_tx
 391              		.section	.bss.hdma_usart1_tx,"aw",%nobits
 392              		.align	2
 395              	hdma_usart1_tx:
 396 0000 00000000 		.space	96
 396      00000000 
 396      00000000 
 396      00000000 
 396      00000000 
 397              		.global	huart1
 398              		.section	.bss.huart1,"aw",%nobits
 399              		.align	2
 402              	huart1:
 403 0000 00000000 		.space	72
 403      00000000 
 403      00000000 
 403      00000000 
 403      00000000 
 404              		.text
 405              	.Letext0:
 406              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 407              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 408              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 409              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
ARM GAS  /tmp/cc46IN26.s 			page 12


 410              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 411              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 412              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 413              		.file 9 "Core/Inc/usart.h"
 414              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 415              		.file 11 "Core/Inc/main.h"
ARM GAS  /tmp/cc46IN26.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
     /tmp/cc46IN26.s:21     .text.MX_USART1_UART_Init:00000000 $t
     /tmp/cc46IN26.s:27     .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
     /tmp/cc46IN26.s:85     .text.MX_USART1_UART_Init:0000002c $d
     /tmp/cc46IN26.s:402    .bss.huart1:00000000 huart1
     /tmp/cc46IN26.s:91     .text.HAL_UART_MspInit:00000000 $t
     /tmp/cc46IN26.s:97     .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/cc46IN26.s:314    .text.HAL_UART_MspInit:000000ec $d
     /tmp/cc46IN26.s:395    .bss.hdma_usart1_tx:00000000 hdma_usart1_tx
     /tmp/cc46IN26.s:322    .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/cc46IN26.s:328    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/cc46IN26.s:383    .text.HAL_UART_MspDeInit:00000038 $d
     /tmp/cc46IN26.s:392    .bss.hdma_usart1_tx:00000000 $d
     /tmp/cc46IN26.s:399    .bss.huart1:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
